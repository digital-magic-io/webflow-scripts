{"mappings":"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","sources":["src/index.ts","src/api.ts","src/wfdom.ts"],"sourcesContent":["import { apiGetClient, apiPostClient, ClientPersonalData } from './api'\nimport { getInput, setErrorMsg, setupFormHandler } from './wfdom'\nimport { WfConfiguration } from './wfconfig'\n\n/*\nconst handleSubmitSearch = (dom: DomUtils) => (e: Event): void => {\n  e.preventDefault()\n  e.stopPropagation()\n  const formData = e.target as HTMLFormElement\n  console.log('Form submitted', formData)\n  const plateNumber = getInputById(idInputPlateNumber)?.value\n  if (plateNumber && plateNumber.length > 0) {\n    console.log('Plate number:', plateNumber)\n    apiGetCar(plateNumber)\n      .then((response) => {\n        console.log('Car response:', response)\n        setInputById(idVehicleMake, response.mark)\n        setInputById(idVehicleModel, response.model)\n      })\n      .catch((error) => {\n        console.error('Car error:', error)\n        const errMsg = getElById(idErrorMessage)\n        if (errMsg) {\n          errMsg.innerHTML = 'Car not found'\n        }\n      })\n  }\n}\n*/\n\nconst handleSubmitClient =\n  (conf: WfConfiguration) =>\n  (e: Event): void => {\n    e.preventDefault()\n    const client: ClientPersonalData = {\n      formType: 'BUYOUT',\n      name: getInput(conf.elements.stepClient.txtName)?.value ?? '',\n      email: getInput(conf.elements.stepClient.txtEmail)?.value ?? '',\n      phoneNumber: getInput(conf.elements.stepClient.txtPhone)?.value ?? '',\n      language: 'et'\n    }\n    if (client.name && client.email && client.phoneNumber) {\n      void apiPostClient(client)\n        .then((r) => {\n          if (r.status < 299) {\n            conf.stepper.nextStepFn(1)\n          } else {\n            throw new Error('Unable to send client data')\n          }\n        })\n        .catch((error) => {\n          console.error('Client error:', error)\n          // TODO: Create utility for it\n          setErrorMsg(conf.elements.stepClient.msgError, 'Unable to send client data!')\n        })\n    } else {\n      setErrorMsg(conf.elements.stepClient.msgError, 'All fields must be filled!')\n    }\n  }\n\n/*\nconst handleSubmitVehicle =\n  (dom: WfDom) =>\n  (e: Event): void => {\n    e.preventDefault()\n    e.stopPropagation()\n    const formData = e.target as HTMLFormElement\n    console.log('Form submitted', formData)\n  }\n*/\n\nexport const init = async (conf: WfConfiguration): Promise<void> => {\n  console.log('Initializing...')\n  void apiGetClient().then((client) => {\n    console.log('Client', client)\n    setupFormHandler(conf.elements.stepClient.form, handleSubmitClient(conf))\n  })\n\n  //dom.setupFormHandler(conf.stepVehicle, handleSubmitSearch(dom))\n  //dom.setupFormHandler(idFormVehicle, handleSubmitVehicle(dom))\n}\n","type Language = 'et' | 'ru' | 'en'\n\ntype FormType = 'BUYOUT'\n\nexport type ClientPersonalData = {\n  formType: FormType\n  name: string\n  email: string\n  phoneNumber: string\n  language: Language\n}\n\nexport type VehicleMntSearchResponse = {\n  engine?: {\n    type: 'FUELS'\n    value: number\n  }\n  engineVolCm3?: number\n  engineKw?: number\n  firstRegYear?: number\n  mark: string\n  model: string\n  nextInspectionDate?: string\n  transmission?: {\n    type: 'TRANSMISSIONS'\n    value: number\n  }\n  registrationNumber?: string\n}\n\nconst lookupCarRegistryUrl = (plateNumber: string): string => `https://test.carprof.ee/api/v1/cars/mnt/${plateNumber}`\nconst clientUrl = 'https://test.carprof.ee/api/v1/forms/client'\n\nconst fetchTyped = async <T>(url: string, init: RequestInit = {}): Promise<T> => {\n  const response = await fetch(url, init)\n  return (await response.json()) as Promise<T>\n}\n\nconst getTyped = async <T>(url: string): Promise<T> => fetchTyped(url)\nconst postTyped = async <T, R>(url: string, body: T): Promise<R> =>\n  fetchTyped(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n\nexport const apiGetCar = (plateNumber: string): Promise<VehicleMntSearchResponse> =>\n  getTyped(lookupCarRegistryUrl(plateNumber))\n\nexport const apiGetClient = (): Promise<ClientPersonalData> => getTyped(clientUrl)\nexport const apiPostClient = (client: ClientPersonalData): Promise<Response> => postTyped(clientUrl, client)\n","export const getElement = <T extends HTMLElement>(path: string): T | undefined => {\n  const el: HTMLElement | null = document.querySelector(path)\n  if (el === null) {\n    console.error(`Element not found by path: ${path}.`)\n    return undefined\n  } else {\n    return el as T\n  }\n}\nexport const getInput = (path: string): HTMLInputElement | undefined => getElement<HTMLInputElement>(path)\nexport const setInput = (path: string, value: string): void => {\n  const input = getInput(path)\n  if (input) {\n    input.value = value\n  }\n}\n\nexport const getForm = (path: string): HTMLFormElement | undefined => getElement<HTMLFormElement>(path)\n\nexport const setErrorMsg = (path: string, msg: string): void => {\n  const el = getElement(path)\n  if (el) {\n    el.innerHTML = msg\n  }\n}\n\nexport const setupFormHandler = (path: string, handler: (e: Event) => void): void => {\n  const form = getForm(path)\n  if (form) {\n    form.action = ''\n    form.method = ''\n    form.onsubmit = (e) => {\n      e.preventDefault()\n      e.stopPropagation()\n    }\n    // TODO: Remove all event listeners\n    form.addEventListener('submit', handler)\n  } else {\n    console.error(`Unable to find form with id \"${path}\"`)\n  }\n}\n\nexport const setupBtnHandler = (path: string, handler: (e: Event) => void): void => {\n  const btn = getElement<HTMLButtonElement>(path)\n  if (btn) {\n    btn.onclick = handler\n  } else {\n    console.error(`Unable to find button with id \"${path}\"`)\n  }\n}\n"],"names":[],"version":3,"file":"module.js.map"}