{"mappings":"AAAA,0BAA0B;AAC1B,MAAM,kCAAY,CAAC,cAAgC,CAAC,wCAAwC,EAAE,YAAY,CAAC;AAE3G,MAAM,uCAAiB;AACvB,MAAM,qCAAe;AACrB,MAAM,2CAAqB;AAC3B,MAAM,sCAAgB;AACtB,MAAM,sCAAgB;AACtB,MAAM,uCAAiB;AAcvB,MAAM,kCAAY,CAAwB;IACxC,MAAM,KAAyB,SAAS,cAAc,CAAC;IACvD,IAAI,OAAO,MAAM;QACf,QAAQ,KAAK,CAAC,CAAC,iBAAiB,EAAE,GAAG,WAAW,CAAC;QACjD,OAAO;IACT,OACE,OAAO;AAEX;AACA,MAAM,qCAAe,CAAC,KAA6C,gCAA4B;AAC/F,MAAM,qCAAe,CAAC,IAAY;IAChC,MAAM,QAAQ,mCAAa;IAC3B,IAAI,OACF,MAAM,KAAK,GAAG;AAElB;AAEA,MAAM,oCAAc,CAAC,KAA4C,gCAA2B;AAE5F,MAAM,mCAAa,OAAU;IAC3B,MAAM,WAAW,MAAM,MAAM;IAC7B,OAAQ,MAAM,SAAS,IAAI;AAC7B;AAEA,MAAM,yCAAmB,CAAC,QAAgB;IACxC,MAAM,OAAO,kCAAY;IACzB,IAAI,MAAM;QACR,KAAK,MAAM,GAAG;QACd,KAAK,MAAM,GAAG;QACd,KAAK,gBAAgB,CAAC,UAAU;IAClC,OACE,QAAQ,KAAK,CAAC,CAAC,6BAA6B,EAAE,mCAAa,CAAC,CAAC;AAEjE;AAEA,MAAM,kCAAY,CAAC,cAA2D,iCAAW,gCAAU;AAEnG,MAAM,2CAAqB,CAAC;IAC1B,EAAE,cAAc;IAChB,MAAM,WAAW,EAAE,MAAM;IACzB,QAAQ,GAAG,CAAC,kBAAkB;IAC9B,MAAM,cAAc,mCAAa,2CAAqB;IACtD,IAAI,eAAe,YAAY,MAAM,GAAG,GAAG;QACzC,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,gCAAU,aACP,IAAI,CAAC,CAAC;YACL,QAAQ,GAAG,CAAC,iBAAiB;YAC7B,mCAAa,qCAAe,SAAS,IAAI;YACzC,mCAAa,sCAAgB,SAAS,KAAK;QAC7C,GACC,KAAK,CAAC,CAAC;YACN,QAAQ,KAAK,CAAC,cAAc;YAC5B,MAAM,SAAS,gCAAU;YACzB,IAAI,QACF,OAAO,SAAS,GAAG;QAEvB;IACJ;AACF;AAEA,MAAM,4CAAsB,CAAC;IAC3B,EAAE,cAAc;IAChB,MAAM,WAAW,EAAE,MAAM;IACzB,QAAQ,GAAG,CAAC,kBAAkB;AAChC;AAEO,MAAM,4CAAO;IAClB,uCAAiB,oCAAc;IAC/B,uCAAiB,qCAAe;AAClC;AAEA","sources":["src/index.ts"],"sourcesContent":["// Application entry point\nconst getCarUrl = (plateNumber: string): string => `https://test.carprof.ee/api/v1/cars/mnt/${plateNumber}`\n\nconst idErrorMessage = 'error-message'\nconst idFormSearch = 'search-form'\nconst idInputPlateNumber = 'plateNumber'\nconst idFormVehicle = 'vehicle-form'\nconst idVehicleMake = 'make'\nconst idVehicleModel = 'model'\n\ntype VehicleMntSearchResponse = {\n  engine?: string\n  engineVolCm3?: string\n  engineKw?: string\n  firstRegYear?: string\n  mark: string\n  model: string\n  nextInspectionDate?: string\n  transmission?: string\n  registrationNumber?: string\n}\n\nconst getElById = <T extends HTMLElement>(id: string): T | undefined => {\n  const el: HTMLElement | null = document.getElementById(id)\n  if (el === null) {\n    console.error(`Element with id \"${id}\" not found`)\n    return undefined\n  } else {\n    return el as T\n  }\n}\nconst getInputById = (id: string): HTMLInputElement | undefined => getElById<HTMLInputElement>(id)\nconst setInputById = (id: string, value: string): void => {\n  const input = getInputById(id)\n  if (input) {\n    input.value = value\n  }\n}\n\nconst getFormById = (id: string): HTMLFormElement | undefined => getElById<HTMLFormElement>(id)\n\nconst fetchTyped = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url)\n  return (await response.json()) as Promise<T>\n}\n\nconst setupFormHandler = (formId: string, handler: (e: Event) => void): void => {\n  const form = getFormById(formId)\n  if (form) {\n    form.action = ''\n    form.method = ''\n    form.addEventListener('submit', handler)\n  } else {\n    console.error(`Unable to find form with id \"${idFormSearch}\"`)\n  }\n}\n\nconst apiGetCar = (plateNumber: string): Promise<VehicleMntSearchResponse> => fetchTyped(getCarUrl(plateNumber))\n\nconst handleSubmitSearch = (e: Event): void => {\n  e.preventDefault()\n  const formData = e.target as HTMLFormElement\n  console.log('Form submitted', formData)\n  const plateNumber = getInputById(idInputPlateNumber)?.value\n  if (plateNumber && plateNumber.length > 0) {\n    console.log('Plate number:', plateNumber)\n    apiGetCar(plateNumber)\n      .then((response) => {\n        console.log('Car response:', response)\n        setInputById(idVehicleMake, response.mark)\n        setInputById(idVehicleModel, response.model)\n      })\n      .catch((error) => {\n        console.error('Car error:', error)\n        const errMsg = getElById(idErrorMessage)\n        if (errMsg) {\n          errMsg.innerHTML = 'Car not found'\n        }\n      })\n  }\n}\n\nconst handleSubmitVehicle = (e: Event): void => {\n  e.preventDefault()\n  const formData = e.target as HTMLFormElement\n  console.log('Form submitted', formData)\n}\n\nexport const init = (): void => {\n  setupFormHandler(idFormSearch, handleSubmitSearch)\n  setupFormHandler(idFormVehicle, handleSubmitVehicle)\n}\n\ninit()\n"],"names":[],"version":3,"file":"module.js.map"}