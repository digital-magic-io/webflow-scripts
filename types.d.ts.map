{"mappings":"AEAA,kBAAyB;IACvB,UAAU,EAAE;QACV,IAAI,EAAE,MAAM,CAAA;QACZ,QAAQ,EAAE,MAAM,CAAA;QAChB,OAAO,EAAE,MAAM,CAAA;QACf,QAAQ,EAAE,MAAM,CAAA;QAChB,QAAQ,EAAE,MAAM,CAAA;QAChB,SAAS,EAAE,MAAM,CAAA;KAClB,CAAA;IACD,WAAW,EAAE;QACX,IAAI,EAAE,MAAM,CAAA;QACZ,QAAQ,EAAE,MAAM,CAAA;QAChB,cAAc,EAAE,MAAM,CAAA;QACtB,OAAO,EAAE,MAAM,CAAA;QACf,QAAQ,EAAE,MAAM,CAAA;QAChB,SAAS,EAAE,MAAM,CAAA;KAClB,CAAA;IACD,UAAU,EAAE,MAAM,CAAA;CACnB,CAAA;AAED,uBAA8B;IAC5B,OAAO,EAAE;QACP,KAAK,EAAE,MAAM,CAAA;QACb,UAAU,EAAE,CAAC,IAAI,EAAE,MAAM,KAAK,IAAI,CAAA;QAClC,UAAU,EAAE,CAAC,IAAI,EAAE,MAAM,KAAK,IAAI,CAAA;KACnC,CAAA;IACD,QAAQ,EAAE,UAAU,CAAA;CACrB,CAAA;ACyCD,OAAO,MAAM,aAAoB,eAAe,KAAG,QAAQ,IAAI,CAM9D,CAAA","sources":["src/src/api.ts","src/src/wfdom.ts","src/src/wfconfig.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,"import { apiGetCar, apiGetClient, apiPostClient, ClientPersonalData } from './api'\nimport { getElement, getInput, setupFormHandler } from './wfdom'\nimport { WfConfiguration } from './wfconfig'\n\n/*\nconst handleSubmitSearch = (dom: DomUtils) => (e: Event): void => {\n  e.preventDefault()\n  e.stopPropagation()\n  const formData = e.target as HTMLFormElement\n  console.log('Form submitted', formData)\n  const plateNumber = getInputById(idInputPlateNumber)?.value\n  if (plateNumber && plateNumber.length > 0) {\n    console.log('Plate number:', plateNumber)\n    apiGetCar(plateNumber)\n      .then((response) => {\n        console.log('Car response:', response)\n        setInputById(idVehicleMake, response.mark)\n        setInputById(idVehicleModel, response.model)\n      })\n      .catch((error) => {\n        console.error('Car error:', error)\n        const errMsg = getElById(idErrorMessage)\n        if (errMsg) {\n          errMsg.innerHTML = 'Car not found'\n        }\n      })\n  }\n}\n*/\n\nconst handleSubmitClient =\n  (conf: WfConfiguration) =>\n  (e: Event): void => {\n    e.preventDefault()\n    const client: ClientPersonalData = {\n      formType: 'BUYOUT',\n      name: getInput(conf.elements.stepClient.txtName)?.value ?? '',\n      email: getInput(conf.elements.stepClient.txtEmail)?.value ?? '',\n      phoneNumber: getInput(conf.elements.stepClient.txtPhone)?.value ?? '',\n      language: 'et'\n    }\n    if (client.name && client.email && client.phoneNumber) {\n      void apiPostClient(client)\n        .then(() => {\n          conf.stepper.nextStepFn(1)\n        })\n        .catch((error) => {\n          console.error('Client error:', error)\n          // TODO: Create utility for it\n          const errMsg = getElement(conf.elements.stepClient.msgError)\n          if (errMsg) {\n            errMsg.innerHTML = 'Unable to send client data'\n          }\n        })\n    }\n  }\n\n/*\nconst handleSubmitVehicle =\n  (dom: WfDom) =>\n  (e: Event): void => {\n    e.preventDefault()\n    e.stopPropagation()\n    const formData = e.target as HTMLFormElement\n    console.log('Form submitted', formData)\n  }\n*/\n\nexport const init = async (conf: WfConfiguration): Promise<void> => {\n  const client = await apiGetClient()\n  console.log(client)\n  setupFormHandler(conf.elements.stepClient.form, handleSubmitClient(conf))\n  //dom.setupFormHandler(conf.stepVehicle, handleSubmitSearch(dom))\n  //dom.setupFormHandler(idFormVehicle, handleSubmitVehicle(dom))\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}