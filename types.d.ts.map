{"mappings":"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","sources":["src/src/core/types.ts","src/src/core/dom.ts","src/src/core/form.ts","src/src/core/config.ts","src/src/core/utils.ts","src/src/core/fetch.ts","src/src/core/index.ts","src/src/cp/types.ts","src/src/cp/api/types.ts","src/src/cp/api/requests.ts","src/src/cp/api/index.ts","src/src/cp/api/utils.ts","src/src/cp/actions.ts","src/src/cp/index.ts","src/src/config.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import { CpConfig } from './config'\nimport {\n  ActionState,\n  AppConfig,\n  CpFormConfig,\n  FileForm,\n  InitialForm,\n  reloadVehicleFormData,\n  submitFiles,\n  submitInitialForm,\n  submitVehicleForm,\n  VehicleForm\n} from './cp'\nimport { init } from './core'\nimport { FormErrorMessages } from './core/types'\nimport { createState } from './core/utils'\nimport { DmForm } from './core/form'\n\nconst setVisibilityForAll = (selector: string | undefined, value: boolean): void => {\n  if (selector) {\n    const elements = document.querySelectorAll<HTMLElement>(selector)\n    elements.forEach((el) => {\n      setElementVisible(el, value)\n    })\n  }\n}\n\nconst setElementVisible = (el: HTMLElement, value: boolean): void => {\n  el.style.display = value ? 'flex' : 'none'\n}\n\nexport const initCp = (conf: CpConfig): void => {\n  const state: ActionState = {\n    formId: createState<string | undefined>(undefined),\n    messages: conf.messages,\n    captchaKey: conf.captchaKey,\n    limits: {\n      maxFilesCount: conf.limits?.maxFilesCount ?? 10,\n      maxFileSizeMb: conf.limits?.maxFileSizeMb ?? 10\n    }\n  }\n\n  const beforeSubmit = (form: DmForm<string>): void => {\n    form.setFormDisabled(true)\n    setVisibilityForAll(conf.loaderSelector, true)\n  }\n  const afterSubmit = (form: DmForm<string>): void => {\n    form.setFormDisabled(false)\n    setVisibilityForAll(conf.loaderSelector, false)\n  }\n\n  const withSubmitAction = async (form: DmForm<string>, action: () => Promise<void>): Promise<void> => {\n    beforeSubmit(form)\n    await action().finally(() => afterSubmit(form))\n  }\n\n  const labelConfig: AppConfig['labels'] = {\n    markAndModel: {\n      selector: conf.labelSelectors.markAndModel\n    },\n    plateNumber: {\n      selector: conf.labelSelectors.plateNumber\n    }\n  }\n  /*\n  // TODO: Correct approach is to map over config entries\n  Object.entries<string>(conf.labelSelectors)\n  .map(([labelName, selector]) => ({\n    [labelName]: {\n      selector: selector\n    }\n  }))\n  .reduce((acc, val) => ({ ...acc, ...val }), {})\n   */\n\n  const buttonConfig: AppConfig['buttons'] = {\n    updateVehicle: {\n      selector: conf.buttonSelectors.updateVehicle,\n      onClick: (ctx) => {\n        void withSubmitAction(ctx.forms.vehicle, async () => {\n          const plateNumber = ctx.forms.vehicle.fields.plateNumber.input.el.value\n          await reloadVehicleFormData({\n            data: { plateNumber },\n            ctx,\n            success: () => {},\n            fail: (error) => ctx.forms.vehicle.setError(error),\n            state\n          })\n        })\n      }\n    }\n  }\n\n  const initialFormConfig: CpFormConfig<InitialForm> = {\n    selector: '[data-dm-id=\"form_find_vehicle\"]',\n    onSuccess: (ctx) => {\n      conf.actions.switchStep(1, ctx)\n    },\n    onError: (error, ctx) => {\n      ctx.forms.initial.setError(error)\n    },\n    onSubmit: (data, ctx, success, fail) => submitInitialForm({ data, ctx, success, fail, state })\n  }\n\n  const vehicleErrorMessages: Partial<FormErrorMessages> = {\n    pattern: state.messages.invalidEmailError\n  }\n\n  const vehicleFormConfig: CpFormConfig<VehicleForm> = {\n    selector: '[data-dm-id=\"form_vehicle\"]',\n    errorMessages: vehicleErrorMessages,\n    onSuccess: (ctx) => {\n      conf.actions.switchStep(2, ctx)\n    },\n    onError: (error, ctx) => {\n      ctx.forms.vehicle.setError(error)\n    },\n    onSubmit: (data, ctx, success, fail) => submitVehicleForm({ data, ctx, success, fail, state })\n  }\n\n  const filesFormConfig: CpFormConfig<FileForm> = {\n    selector: '[data-dm-id=\"form_files\"]',\n    onSuccess: (ctx) => {\n      conf.actions.switchStep(3, ctx)\n    },\n    onError: (error, ctx) => {\n      ctx.forms.files.setError(error)\n    },\n    onSubmit: (data, ctx, success, fail) => submitFiles({ data, ctx, success, fail, state })\n  }\n\n  const cfg: AppConfig = {\n    forms: {\n      initial: initialFormConfig,\n      vehicle: vehicleFormConfig,\n      files: filesFormConfig\n    },\n    buttons: buttonConfig,\n    labels: labelConfig,\n    handlers: { beforeSubmit, afterSubmit },\n    errorMessages: conf.errorMessages,\n    afterInit: () => {\n      setVisibilityForAll(conf.loaderSelector, false)\n    }\n  }\n  init(cfg)\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}