{"mappings":"AEAA,kBAAyB;IACvB,UAAU,EAAE;QACV,IAAI,EAAE,MAAM,CAAA;QACZ,QAAQ,EAAE,MAAM,CAAA;QAChB,OAAO,EAAE,MAAM,CAAA;QACf,QAAQ,EAAE,MAAM,CAAA;QAChB,QAAQ,EAAE,MAAM,CAAA;QAChB,SAAS,EAAE,MAAM,CAAA;KAClB,CAAA;IACD,WAAW,EAAE;QACX,WAAW,EAAE;YACX,IAAI,EAAE,MAAM,CAAA;YACZ,QAAQ,EAAE,MAAM,CAAA;YAChB,cAAc,EAAE,MAAM,CAAA;YACtB,SAAS,EAAE,MAAM,CAAA;SAClB,CAAA;QACD,IAAI,EAAE,MAAM,CAAA;QACZ,QAAQ,EAAE,MAAM,CAAA;QAChB,OAAO,EAAE,MAAM,CAAA;QACf,QAAQ,EAAE,MAAM,CAAA;QAChB,SAAS,EAAE,MAAM,CAAA;KAClB,CAAA;IACD,SAAS,EAAE;QACT,IAAI,EAAE,MAAM,CAAA;QACZ,QAAQ,EAAE,MAAM,CAAA;QAChB,UAAU,EAAE,MAAM,CAAA;QAClB,SAAS,EAAE,MAAM,CAAA;KAClB,CAAA;IACD,UAAU,EAAE,MAAM,CAAA;CACnB,CAAA;AAED,uBAA8B;IAC5B,OAAO,EAAE;QACP,KAAK,EAAE,MAAM,CAAA;QACb,UAAU,EAAE,CAAC,IAAI,EAAE,MAAM,KAAK,IAAI,CAAA;QAClC,UAAU,EAAE,CAAC,IAAI,EAAE,MAAM,KAAK,IAAI,CAAA;KACnC,CAAA;IACD,QAAQ,EAAE,UAAU,CAAA;CACrB,CAAA;ACwCD,OAAO,MAAM,aAAc,eAAe,KAAG,IAY5C,CAAA","sources":["src/src/api.ts","src/src/wfdom.ts","src/src/wfconfig.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,"import { apiGetCar, apiGetClient, apiPostClient, ClientPersonalData } from './api'\nimport { getInput, setErrorMsg, setInput, setupFormHandler } from './wfdom'\nimport { WfConfiguration } from './wfconfig'\n\nconst handleSubmitClient =\n  (stepper: WfConfiguration['stepper'], f: WfConfiguration['elements']['stepClient']) =>\n  (e: Event): void => {\n    console.log('Form submitted', e.target)\n    const client: ClientPersonalData = {\n      formType: 'BUYOUT',\n      name: getInput(f.txtName)?.value ?? '',\n      email: getInput(f.txtEmail)?.value ?? '',\n      phoneNumber: getInput(f.txtPhone)?.value ?? '',\n      language: 'et'\n    }\n    if (client.name && client.email && client.phoneNumber) {\n      void apiPostClient(client)\n        .then(() => {\n          stepper.nextStepFn(1)\n        })\n        .catch((error) => {\n          console.error('API error:', error)\n          setErrorMsg(f.msgError, 'Unable to send client data!')\n        })\n    } else {\n      setErrorMsg(f.msgError, 'All fields must be filled!')\n    }\n  }\n\nconst handleSubmitSearchVehicle =\n  (f: WfConfiguration['elements']['stepVehicle']) =>\n  (e: Event): void => {\n    console.log('Form submitted', e.target)\n    const plateNumber = getInput(f.plateNumber.txtPlateNumber)?.value\n    if (plateNumber && plateNumber.length > 0) {\n      console.log('Plate number:', plateNumber)\n      apiGetCar(plateNumber)\n        .then((response) => {\n          console.log('Car response:', response)\n          setInput(f.txtMake, response.mark)\n          setInput(f.txtModel, response.model)\n        })\n        .catch((error) => {\n          console.error('Car error:', error)\n          setErrorMsg(f.plateNumber.msgError, 'Car not found!')\n        })\n    } else {\n      setErrorMsg(f.plateNumber.msgError, 'Plate number must be filled!')\n    }\n  }\n\nconst handleSubmitVehicle =\n  (f: WfConfiguration['elements']['stepVehicle']) =>\n  (e: Event): void => {\n    console.log('Form submitted', e.target)\n    const make = getInput(f.txtMake)?.value\n    const model = getInput(f.txtModel)?.value\n    if (make && model) {\n      console.log(`Submitted: make=${make}, model=${model}`)\n    } else {\n      setErrorMsg(f.msgError, 'Make and model must be filled!')\n    }\n  }\n\nconst handleSubmitFiles =\n  (f: WfConfiguration['elements']['stepFiles']) =>\n  (e: Event): void => {\n    console.log('Form submitted', e.target)\n    const files = getInput(f.inputFiles)?.files\n    if (files && files.length > 0) {\n      console.log('Files:', files)\n    } else if (files?.length > 10) {\n      setErrorMsg(f.msgError, 'Too many files selected!')\n    } else {\n      setErrorMsg(f.msgError, 'Files must be selected!')\n    }\n  }\n\nexport const init = (conf: WfConfiguration): void => {\n  console.log('Initializing...', conf)\n  void apiGetClient().then((client) => {\n    console.log('Client', client)\n    setupFormHandler(conf.elements.stepClient.form, handleSubmitClient(conf.stepper, conf.elements.stepClient))\n    setupFormHandler(conf.elements.stepVehicle.plateNumber.form, handleSubmitSearchVehicle(conf.elements.stepVehicle))\n    setupFormHandler(conf.elements.stepVehicle.form, handleSubmitVehicle(conf.elements.stepVehicle))\n    setupFormHandler(conf.elements.stepFiles.form, handleSubmitFiles(conf.elements.stepFiles))\n  })\n\n  //dom.setupFormHandler(conf.stepVehicle, handleSubmitSearch(dom))\n  //dom.setupFormHandler(idFormVehicle, handleSubmitVehicle(dom))\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}